* 기본 구조 *
App.jsx는 모든 하위 컴포넌트와 모듈을 가져와서 하나로 모아주는 루트 컴포넌트 역할을
main.jsx는 App.jsx를 가져와서 ReactDOM을 통해 실제 DOM에 렌더링 해주는 역할을
이렇게 되면 App컴포넌트가 애플리케이션 전체를 담당하는 최상위 컨테이너가 되는 것이죠 
(역할에 따라, UI담당: 컴포넌트 / 기능 담당: 모듈)

1. useState
  State를 생성
  컴포넌트 내부의 변수로 활용
  값이 변경되면 컴포넌트 리렌더링


2. useRef
  Reference 객체를 생성
  컴포넌트 내부의 변수로 활용
  어떤 경우에도 리렌더링을 유발하지 않음


3. 커스텀훅
  커스텀훅은 hooks폴더 안에서 관리 



궁금 궁금~~
1. useRef는 JS와 다르게 어떻게 리렌더링에서 변수값을 유지하나?
  일반 JS변수는 컴포넌트가 리렌더링될 때마다 초기화된다. = 내부에 선언된 모든 변수들이 재할당
  useRef는 ref객체를 반환하는데, 이 객체의 .current 프로퍼티를 통해 값을 저장하고 사용한다. 중요한 점은 리렌더링이 발생해도 이 ref객체를 다시 생성하지 않는다.
  따라서 useRef로 생성된 ref 객체는 리렌더링 시에도 동일한 객체를 참조하게 되는 것이다.
  